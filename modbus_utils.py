from pymodbus.client import ModbusTcpClient
from pymodbus.exceptions import ModbusException
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    filename='modbus.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def check_modbus_connection(ip_address, port=502, timeout=2):
    try:
        client = ModbusTcpClient(host=ip_address, port=port, timeout=timeout)
        result = client.connect()
        client.close()
        return result
    except ModbusException:
        return False
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑'—î–¥–Ω–∞–Ω–Ω—ñ –∑ {ip_address}: {e}")
        return False

def modbus_turn_on(ip, port=502):
    try:
        client = ModbusTcpClient(ip, port=port)
        if client.connect():
            client.write_registers(1000, [6])
            logging.info(f"[Modbus] üîå –Ü–Ω–≤–µ—Ä—Ç–æ—Ä {ip} ‚Äî –∑–∞–ø—É—â–µ–Ω–æ (CMD6)")
        client.close()
    except Exception as e:
        logging.error(f"[Modbus] ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —ñ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ {ip}: {e}")

def modbus_turn_off(ip, port=502):
    try:
        client = ModbusTcpClient(ip, port=port)
        if client.connect():
            client.write_registers(1000, [5])
            logging.info(f"[Modbus] ‚õî –Ü–Ω–≤–µ—Ä—Ç–æ—Ä {ip} ‚Äî –∑—É–ø–∏–Ω–µ–Ω–æ (CMD5)")
        client.close()
    except Exception as e:
        logging.error(f"[Modbus] ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑—É–ø–∏–Ω–∫–∏ —ñ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ {ip}: {e}")

def modbus_limit_power(ip, value=50, port=502):
    try:
        client = ModbusTcpClient(ip, port=port)
        if client.connect():
            scaled = int(value / 100 * 32767)
            client.write_registers(1000, [3, scaled])
            logging.info(f"[Modbus] ‚ö° –û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ—Ç—É–∂–Ω–æ—Å—Ç—ñ {ip} –¥–æ {value}% (scaled={scaled})")
        client.close()
    except Exception as e:
        logging.error(f"[Modbus] ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ—Ç—É–∂–Ω–æ—Å—Ç—ñ {ip}: {e}")
